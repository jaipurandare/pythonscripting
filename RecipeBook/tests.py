import unittest
from solution import RecipeBook

class TestRecipeBook(unittest.TestCase):

    def test_initialize_recipe_book(self):
        # This function should initialize a recipe book
        # For the sake of this example, we will just check if it exists
        my_book = RecipeBook("MyBook")
        self.assertIsNotNone(my_book)
        self.assertEqual(my_book.name, "MyBook")

#This was generated by the AI, but it is not used in the solution.
# def test_create_recipe_book():
#     recipe = create_recipe("Pasta", "Boil water, add pasta, cook for 10 minutes.")
#     assert recipe['name'] == "Pasta"
#     assert recipe['instructions'] == "Boil water, add pasta, cook for 10 minutes."


from solution import Recipe, RecipeIngredient, Ingredient, DietaryTag
class TestRecipe(unittest.TestCase):
    
    def test_initialize_recipe(self):
        # This function should initialize a recipe
        tomato = Ingredient("Tomato", [DietaryTag.VEGAN, DietaryTag.VEGETARIAN])
        pasta = Ingredient("Pasta", [DietaryTag.VEGAN, DietaryTag.VEGETARIAN])
        two_tomatoes = RecipeIngredient(tomato, 2, "number")
        pasta_4oz = RecipeIngredient(pasta, 4, "oz")
        pasta_name = "Pasta with Tomato"
        my_recipe = Recipe(pasta_name, [two_tomatoes, pasta_4oz])
        self.assertIsNotNone(my_recipe)
        self.assertEqual(my_recipe.name, pasta_name)
        self.assertListEqual(my_recipe.ingredients, [two_tomatoes, pasta_4oz])